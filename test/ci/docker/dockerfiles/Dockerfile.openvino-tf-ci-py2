# ==============================================================================
# Copyright (C) 2021 Intel Corporation
 
# SPDX-License-Identifier: Apache-2.0
# ==============================================================================

# Environment to build and unit-test openvino_tensorflow

FROM ubuntu:16.04

# Default python environment is python 2, thus python-pip and virtualenv
# python3-* packages are needed for the code-format check, which uses python3
# python-numpy, python-dev, and python-wheel all needed for TensorFlow build
# git is needed to clone tensorflow repository
# unzip and wget are needed for installing bazel
# sudo is required for installing the TF wheel into /usr/local/...
# zlib1g, zlib1g-dev and bash-completion are required by bazel install
# zip and golang-go are needed to run TensorFlow tests
# curl and locate are needed by Tensorflow's configure command
# enum appears to be used in the TensorFlow build
# clang-format-3.9 is needed for code-style checks
# python-tk is used by matplotlib (pip installed below)
RUN apt-get update &&  apt-get install -y \
    python-pip virtualenv \
    python-numpy python-dev python-wheel \
    python3-pip python3-numpy python3-dev python3-wheel \
    git \
    unzip wget \
    sudo \
    zlib1g zlib1g-dev bash-completion \
    build-essential cmake \
    libtinfo-dev \
    zip golang-go \
    locate curl \
    clang-format-3.9 \
    python-tk

# The "locate" command uses a prepopulated index.  If this index is not built,
# then "locate" will find absolutely nothing.  In Tensorflow's configure,
# this manifests itself as a silent failure of the configure script to run to
# completion.  Therefore, updatedb MUST BE RUN to provide an index for "locate".
RUN updatedb

# six, enum34 and mock are required for building the tensorflow wheel
# keras_applications and keras_preprocessing are needed for modern TensorFlow builds
# yapf and futures are needed for code-format checks (ngraph-tf PR#211)
RUN pip install --upgrade pip
RUN pip install six enum34 mock
RUN pip install keras_applications keras_preprocessing
RUN pip install yapf==0.26.0
RUN pip install futures

# yapf and futures are needed for code-format checks
RUN pip3 install yapf==0.26.0
RUN pip3 install futures


# We include pytest so the Docker image can be used for daily validation
RUN pip install --upgrade pytest

# Bazel requires the OpenJDK
RUN apt-get update && apt-get install -y openjdk-8-jdk
#
# This bazel version works with current TF
ARG BAZEL_VERSION=0.25.2
RUN wget --no-verbose -c https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel_${BAZEL_VERSION}-linux-x86_64.deb
RUN dpkg -i bazel_${BAZEL_VERSION}-linux-x86_64.deb || true

# Copy in the run-as-user.sh script
# This will allow the builds, which are done in a mounted directory, to
# be run as the user who runs "docker run".  This then allows the mounted
# directory to be properly deleted by the user later (e.g. by jenkins).
WORKDIR /home
