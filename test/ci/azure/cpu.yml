 resources:
  repositories:
  - repository: openvino_tensorflow
    type: github
    endpoint: openvinotoolkit
    name: openvinotoolkit/openvino_tensorflow
    
 pool:
  name: 'Default'
  
 variables:
    WORK_DIR: $(Pipeline.Workspace)/openvino_tensorflow
    BUILD_DIR: $(WORK_DIR)/build
    OV_LOCATION: /opt/intel/caches/openvino_2021.4_0/
    
 steps:
 
   - script: |
      rm -rf $(WORK_DIR) ; mkdir $(WORK_DIR)
      rm -rf $(BUILD_DIR) ; mkdir $(BUILD_DIR)
      
   
   - checkout: self
     clean: true
     lfs: false
     path: openvino_tensorflow
 
   - script: |
      pip install -U pip yapf==0.26.0 pytest psutil keras==2.3.1
     displayName: "Setup" 
    
   - script: |
      export OPENVINO_TF_BACKEND=CPU
      echo $(WORK_DIR)
      git submodule init
      git submodule update
      python3 build_ovtf.py --use_openvino_from_location=$(OV_LOCATION) --use_tensorflow_from_location=/home/iotgecsp/ci_setup/tf_2_5_0_abi0
     workingDirectory: $(WORK_DIR) 
     displayName: "Build"
     
   - script: |
      export OPENVINO_TF_BACKEND=CPU
      
      source $(WORK_DIR)/build_cmake/venv-tf-py3/bin/activate
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(WORK_DIR)/build_cmake/artifacts/lib/
      PYTHONPATH=`pwd` python3 test/ci/azure/test_runner.py \
      --artifacts $(WORK_DIR)/build_cmake/artifacts/ --test_cpp
     workingDirectory: $(WORK_DIR) 
     displayName: "tf_ov C++ Tests"
     
   - script: |
      export OPENVINO_TF_BACKEND=CPU
      
      source $(WORK_DIR)/build_cmake/venv-tf-py3/bin/activate
      cd test/ci/azure/
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(WORK_DIR)/build_cmake/artifacts/lib/
      bash run_inception_v3.sh $(WORK_DIR)/build_cmake/artifacts/
     workingDirectory: $(WORK_DIR) 
     displayName: "C++ Inference Example"

   - script: |
      export OPENVINO_TF_BACKEND=CPU
      source $(OV_LOCATION)/bin/setupvars.sh
      source $(WORK_DIR)/build_cmake/venv-tf-py3/bin/activate
      cd  examples/TF1x/
      chmod +x convert_yolov3.sh
      ./convert_yolov3.sh
      python3 object_detection_sample.py --no_show
     workingDirectory: $(WORK_DIR) 
     displayName: "python Inference Example TF1"

   - script: |
      export OPENVINO_TF_BACKEND=CPU
      source $(OV_LOCATION)/bin/setupvars.sh
      source $(WORK_DIR)/build_cmake/venv-tf-py3/bin/activate
      cd  examples/
      chmod +x convert_yolov3.sh
      ./convert_yolov3.sh
      cd $(WORK_DIR)
      python3 examples/object_detection_sample.py --no_show
     workingDirectory: $(WORK_DIR) 
     displayName: "python Inference Example TF2"
   
   - script: |
      source $(WORK_DIR)/build_cmake/venv-tf-py3/bin/activate
      pip install -U $(WORK_DIR)/build_cmake/artifacts/tensorflow/tensorflow-*.whl
      pip install --no-deps -U $(WORK_DIR)/build_cmake/artifacts/openvino_tensorflow*.whl
     workingDirectory: $(WORK_DIR) 
     displayName: "Install"
   
   - script: |
      export OPENVINO_TF_BACKEND=CPU
      pip install keras
      
      source $(WORK_DIR)/build_cmake/venv-tf-py3/bin/activate
      PYTHONPATH=`pwd`:`pwd`/tools:`pwd`/examples python3 test/ci/azure/test_runner.py \
      --artifacts $(WORK_DIR)/build_cmake/artifacts --test_python
     workingDirectory: $(WORK_DIR) 
     displayName: "python:  Python Tests ${OPENVINO_TF_BACKEND}"
     
   - script: |
      export OPENVINO_TF_BACKEND=CPU
      pip install keras
      
      source $(WORK_DIR)/build_cmake/venv-tf-py3/bin/activate
      PYTHONPATH=`pwd` python3 test/ci/azure/test_runner.py \
        --artifacts $(WORK_DIR)/build_cmake/artifacts --test_tf_python
     workingDirectory: $(WORK_DIR)   
     displayName: "python: TF Python Tests ${OPENVINO_TF_BACKEND}"  
     
   - script: |
      rm -rf *
     displayName: "Cleanup"   
     workingDirectory: $(WORK_DIR)
